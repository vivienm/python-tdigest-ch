name: "Continuous integration"

on:
  push:
  pull_request:

concurrency:
  group: "ci-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  black:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "black"

  isort:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "isort"

  flake8:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "flake8"

  mypy:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "mypy"

  pytest:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "pytest-${{ matrix.python-version }}"
        python-version: "${{ matrix.python-version }}"
    - uses: "actions/upload-artifact@v3"
      with:
        name: "coverage"
        path: "./.coverage.*"

  coverage:
    needs: "pytest"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "actions/download-artifact@v3"
      with:
        name: "coverage"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "coverage"

  sphinx:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "sphinx"
    - if: "github.ref == format('refs/heads/{0}', github.event.repository.default_branch)"
      uses: "actions/upload-pages-artifact@v1"
      with:
        path: "./docs/_build/html"

  safety:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "safety"

  pages:
    if: "github.ref == format('refs/heads/{0}', github.event.repository.default_branch)"
    needs: "sphinx"
    permissions:
      pages: "write"
      id-token: "write"
    environment:
      name: "github-pages"
      url: "${{ steps.deployment.outputs.page_url }}"
    runs-on: "ubuntu-latest"
    steps:
    - id: "deployment"
      uses: "actions/deploy-pages@v1"
